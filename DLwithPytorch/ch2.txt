ch2

신경망(Neural Network) 
- 입력변수들 관련된 변수 간의 관계에 대해 학습하는 알고리즘

- 신경망 구축(정의)  1. torch.nn.Sequential class 사용
                      - 네트워크를 인스턴스화 하는 동시에 원하는 신경망에 연산순서를 인수로 전달
                    2. torch.nn.Module 클래스 사용
                      - 더 복잡하고 강력, 매끄러움
                      
1. 순차형 신경망  - torch.nn 모듈애 정의된 연산을 사용
                 - 신경망을 인스턴스화 하기 위해 torch.nn.Sequential 클래스에 순차적으로 연산들을 인수로 전달
- nn.Linear(입력크기, 출력크기): 가중치벡터 생성(연산)
- nn.ReLU(): 비션형 함수, 출력을 비선형 영역으로 변환
- nn.Sigmoid(): 예측결과 얻기 위해 0-1 사이의 값 출력

2. nn.Module
- self: 클래스에서 정의되는 모든 메소드에 전달되는 임의의 첫 번째 인수
        클래스의 인스턴스를 나타냄
        클래스에서 정의한 속성 및 메소드에 접근하는데 사용 가능
- __init__(): 파이썬 클래스들에서 예약된 메소드(생성자)
              클래스의 객체가 인스턴스화될 때마다 --init--() 메소드 안에서 랩핑된 코드 실행
              객체가 인스턴스화되면 모든 신경망 연산이 준비되도록 해줌
- forward(self, x): 목표로 하는 레이어 연산을 통해 데이터의 흐름을 설명해야 함

텐서(tensor)
- 파이토치에서 계산을 수행하는 엔진
- 데이터 컨테이너
  - 스칼라: 0차원
  - 벡터: 1차원 텐서
  - 매트릭스: 2차원 텐서, 2개의 축
     [ [1차원텐서], [1차원 텐서] ]
   
